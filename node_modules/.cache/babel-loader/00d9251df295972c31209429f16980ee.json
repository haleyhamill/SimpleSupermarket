{"ast":null,"code":"import _slicedToArray from\"/Users/haleyhamill/Desktop/github/SimpleSupermarket/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";export default function useFetch(baseUrl){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];function get(url){return new Promise(function(resolve,reject){fetch(baseUrl+url).then(function(response){return response.json();}).then(function(data){if(!data){setLoading(false);return reject(data);}setLoading(false);resolve(data);}).catch(function(error){setLoading(false);reject(error);});});}function post(url,body){return new Promise(function(resolve,reject){fetch(baseUrl+url,{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(body)}).then(function(response){return response.json();}).then(function(data){if(!data){setLoading(false);return reject(data);}setLoading(false);resolve(data);}).catch(function(error){setLoading(false);reject(error);});});}return{get:get,post:post,loading:loading};};","map":{"version":3,"sources":["/Users/haleyhamill/Desktop/github/SimpleSupermarket/src/useFetch.js"],"names":["useState","useFetch","baseUrl","loading","setLoading","get","url","Promise","resolve","reject","fetch","then","response","json","data","catch","error","post","body","method","headers","JSON","stringify"],"mappings":"sIAAA,OAASA,QAAT,KAAyB,OAAzB,CAEA,cAAe,SAASC,CAAAA,QAAT,CAAkBC,OAAlB,CAA2B,CACxC,cAA8BF,QAAQ,CAAC,IAAD,CAAtC,wCAAOG,OAAP,eAAgBC,UAAhB,eAEA,QAASC,CAAAA,GAAT,CAAaC,GAAb,CAAkB,CAChB,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,KAAK,CAACR,OAAO,CAAGI,GAAX,CAAL,CACGK,IADH,CACQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADhB,EAEGF,IAFH,CAEQ,SAAAG,IAAI,CAAI,CACZ,GAAI,CAACA,IAAL,CAAW,CACTV,UAAU,CAAC,KAAD,CAAV,CACA,MAAOK,CAAAA,MAAM,CAACK,IAAD,CAAb,CACD,CACDV,UAAU,CAAC,KAAD,CAAV,CACAI,OAAO,CAACM,IAAD,CAAP,CACD,CATH,EAUGC,KAVH,CAUS,SAAAC,KAAK,CAAI,CACdZ,UAAU,CAAC,KAAD,CAAV,CACAK,MAAM,CAACO,KAAD,CAAN,CACD,CAbH,EAcD,CAfM,CAAP,CAgBD,CAED,QAASC,CAAAA,IAAT,CAAcX,GAAd,CAAmBY,IAAnB,CAAyB,CACvB,MAAO,IAAIX,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,KAAK,CAACR,OAAO,CAAGI,GAAX,CAAgB,CACnBa,MAAM,CAAE,MADW,CAEnBC,OAAO,CAAE,CACL,eAAgB,kBADX,CAFU,CAKnBF,IAAI,CAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf,CALa,CAAhB,CAAL,CAOGP,IAPH,CAOQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAPhB,EAQGF,IARH,CAQQ,SAAAG,IAAI,CAAI,CACZ,GAAI,CAACA,IAAL,CAAW,CACTV,UAAU,CAAC,KAAD,CAAV,CACA,MAAOK,CAAAA,MAAM,CAACK,IAAD,CAAb,CACD,CACDV,UAAU,CAAC,KAAD,CAAV,CACAI,OAAO,CAACM,IAAD,CAAP,CACD,CAfH,EAgBGC,KAhBH,CAgBS,SAAAC,KAAK,CAAI,CACdZ,UAAU,CAAC,KAAD,CAAV,CACAK,MAAM,CAACO,KAAD,CAAN,CACD,CAnBH,EAoBD,CArBM,CAAP,CAsBD,CAED,MAAO,CAAEX,GAAG,CAAHA,GAAF,CAAOY,IAAI,CAAJA,IAAP,CAAad,OAAO,CAAPA,OAAb,CAAP,CACD","sourcesContent":["import { useState } from \"react\";\n\nexport default function useFetch(baseUrl) {\n  const [loading, setLoading] = useState(true);\n\n  function get(url) {\n    return new Promise((resolve, reject) => {\n      fetch(baseUrl + url)\n        .then(response => response.json())\n        .then(data => {\n          if (!data) {\n            setLoading(false);\n            return reject(data);\n          }\n          setLoading(false);\n          resolve(data);\n        })\n        .catch(error => {\n          setLoading(false);\n          reject(error);\n        });\n    });\n  }\n\n  function post(url, body) {\n    return new Promise((resolve, reject) => {\n      fetch(baseUrl + url, {\n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body)\n      })\n        .then(response => response.json())\n        .then(data => {\n          if (!data) {\n            setLoading(false);\n            return reject(data);\n          }\n          setLoading(false);\n          resolve(data);\n        })\n        .catch(error => {\n          setLoading(false);\n          reject(error);\n        });\n    });\n  }\n\n  return { get, post, loading };\n};"]},"metadata":{},"sourceType":"module"}